version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: fix-track-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: fix_track
      POSTGRES_USER: fix_track_user
      POSTGRES_PASSWORD: fix_track_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fix_track_user -d fix_track"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # fix-track-bot:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: fix-track-bot
  #   restart: unless-stopped
  #   environment:
  #     # App Configuration
  #     APP_NAME: fix-track-bot
  #     APP_VERSION: 1.0.0
  #     APP_ENVIRONMENT: production
  #     APP_DEBUG: false

  #     # Discord Configuration
  #     DISCORD_TOKEN: ${DISCORD_TOKEN}
  #     DISCORD_PREFIX: "!"

  #     # Database Configuration
  #     DATABASE_DRIVER: postgres
  #     DATABASE_HOST: postgres
  #     DATABASE_PORT: 5432
  #     DATABASE_USERNAME: fix_track_user
  #     DATABASE_PASSWORD: fix_track_password
  #     DATABASE_DATABASE: fix_track
  #     DATABASE_SSL_MODE: disable

  #     # Logger Configuration
  #     LOG_LEVEL: info
  #     LOGGER_ENVIRONMENT: production
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   volumes:
  #     - ./config.yaml:/app/config.yaml:ro

volumes:
  postgres_data:
    driver: local
